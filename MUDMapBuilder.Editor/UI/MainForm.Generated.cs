/* Generated by MyraPad at 5/12/2024 6:19:54 PM */
using Myra;
using Myra.Graphics2D;
using Myra.Graphics2D.TextureAtlases;
using Myra.Graphics2D.UI;
using Myra.Graphics2D.Brushes;
using Myra.Graphics2D.UI.Properties;
using FontStashSharp.RichText;
using AssetManagementBase;

#if STRIDE
using Stride.Core.Mathematics;
#elif PLATFORM_AGNOSTIC
using System.Drawing;
using System.Numerics;
using Color = FontStashSharp.FSColor;
#else
// MonoGame/FNA
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
#endif

namespace MUDMapBuilder.Editor.UI
{
	partial class MainForm: Panel
	{
		private void BuildUI()
		{
			_menuItemFileOpen = new MenuItem();
			_menuItemFileOpen.Text = "&Open";
			_menuItemFileOpen.ShortcutText = "Ctrl+O";
			_menuItemFileOpen.Id = "_menuItemFileOpen";

			_menuItemFileSave = new MenuItem();
			_menuItemFileSave.Text = "&Save";
			_menuItemFileSave.ShortcutText = "Ctrl+S";
			_menuItemFileSave.Id = "_menuItemFileSave";

			_menuItemFileSaveAs = new MenuItem();
			_menuItemFileSaveAs.Text = "S&ave As...";
			_menuItemFileSaveAs.Id = "_menuItemFileSaveAs";

			var menuSeparator1 = new MenuSeparator();

			_menuItemImport = new MenuItem();
			_menuItemImport.Text = "&Import...";
			_menuItemImport.ShortcutText = "Ctrl+I";
			_menuItemImport.Id = "_menuItemImport";

			var menuItem1 = new MenuItem();
			menuItem1.Text = "&File";
			menuItem1.Items.Add(_menuItemFileOpen);
			menuItem1.Items.Add(_menuItemFileSave);
			menuItem1.Items.Add(_menuItemFileSaveAs);
			menuItem1.Items.Add(menuSeparator1);
			menuItem1.Items.Add(_menuItemImport);

			_menuHelpAbout = new MenuItem();
			_menuHelpAbout.Text = "&About";
			_menuHelpAbout.Id = "_menuHelpAbout";

			var menuItem2 = new MenuItem();
			menuItem2.Text = "&Help";
			menuItem2.Items.Add(_menuHelpAbout);

			_mainMenu = new HorizontalMenu();
			_mainMenu.Id = "_mainMenu";
			_mainMenu.Items.Add(menuItem1);
			_mainMenu.Items.Add(menuItem2);

			var label1 = new Label();
			label1.Text = "<<";

			_buttonStart = new Button();
			_buttonStart.Id = "_buttonStart";
			_buttonStart.Content = label1;

			_spinButtonStep = new SpinButton();
			_spinButtonStep.Integer = true;
			_spinButtonStep.Width = 50;
			_spinButtonStep.Id = "_spinButtonStep";

			var label2 = new Label();
			label2.Text = ">>";

			_buttonEnd = new Button();
			_buttonEnd.Id = "_buttonEnd";
			_buttonEnd.Content = label2;

			var label3 = new Label();
			label3.Text = "Do Not Straighten";

			var label4 = new Label();
			label4.Text = "Straighten Without Limit";

			var label5 = new Label();
			label5.Text = "Straighten With Limit";

			_comboStraighten = new ComboView();
			_comboStraighten.Id = "_comboStraighten";
			_comboStraighten.Widgets.Add(label3);
			_comboStraighten.Widgets.Add(label4);
			_comboStraighten.Widgets.Add(label5);

			_spinButtonStraightenSteps = new SpinButton();
			_spinButtonStraightenSteps.Integer = true;
			_spinButtonStraightenSteps.Width = 50;
			_spinButtonStraightenSteps.Id = "_spinButtonStraightenSteps";

			var horizontalStackPanel1 = new HorizontalStackPanel();
			horizontalStackPanel1.Spacing = 8;
			horizontalStackPanel1.Widgets.Add(_buttonStart);
			horizontalStackPanel1.Widgets.Add(_spinButtonStep);
			horizontalStackPanel1.Widgets.Add(_buttonEnd);
			horizontalStackPanel1.Widgets.Add(_comboStraighten);
			horizontalStackPanel1.Widgets.Add(_spinButtonStraightenSteps);

			var label6 = new Label();
			label6.Text = "Force X:";

			_spinPushForceX = new SpinButton();
			_spinPushForceX.Maximum = 10;
			_spinPushForceX.Minimum = -10;
			_spinPushForceX.Integer = true;
			_spinPushForceX.Width = 59;
			_spinPushForceX.Id = "_spinPushForceX";

			var label7 = new Label();
			label7.Text = "Force Y:";

			_spinPushForceY = new SpinButton();
			_spinPushForceY.Maximum = 10;
			_spinPushForceY.Minimum = -10;
			_spinPushForceY.Integer = true;
			_spinPushForceY.Width = 59;
			_spinPushForceY.Id = "_spinPushForceY";

			var label8 = new Label();
			label8.Text = "Measure";

			_buttonMeasure = new Button();
			_buttonMeasure.Id = "_buttonMeasure";
			_buttonMeasure.Content = label8;

			var label9 = new Label();
			label9.Text = "Push";

			_buttonPush = new Button();
			_buttonPush.Id = "_buttonPush";
			_buttonPush.Content = label9;

			var horizontalStackPanel2 = new HorizontalStackPanel();
			horizontalStackPanel2.Spacing = 8;
			horizontalStackPanel2.Widgets.Add(label6);
			horizontalStackPanel2.Widgets.Add(_spinPushForceX);
			horizontalStackPanel2.Widgets.Add(label7);
			horizontalStackPanel2.Widgets.Add(_spinPushForceY);
			horizontalStackPanel2.Widgets.Add(_buttonMeasure);
			horizontalStackPanel2.Widgets.Add(_buttonPush);

			_panelMap = new ScrollViewer();
			_panelMap.Id = "_panelMap";

			_labelRoomsCount = new Label();
			_labelRoomsCount.Text = "Rooms: 10";
			_labelRoomsCount.TextColor = ColorStorage.CreateColor(87, 86, 213, 255);
			_labelRoomsCount.Id = "_labelRoomsCount";

			_labelGridSize = new Label();
			_labelGridSize.Text = "Grid Size: 10x10";
			_labelGridSize.TextColor = ColorStorage.CreateColor(87, 86, 213, 255);
			_labelGridSize.Id = "_labelGridSize";

			_labelConnectionsWithObstacles = new Label();
			_labelConnectionsWithObstacles.Text = "Connections With Obstacles: 10";
			_labelConnectionsWithObstacles.TextColor = ColorStorage.CreateColor(254, 57, 48, 255);
			_labelConnectionsWithObstacles.Id = "_labelConnectionsWithObstacles";

			_labelNonStraightConnections = new Label();
			_labelNonStraightConnections.Text = "Non-Straight Connections: 10";
			_labelNonStraightConnections.TextColor = ColorStorage.CreateColor(255, 204, 1, 255);
			_labelNonStraightConnections.Id = "_labelNonStraightConnections";

			_labelLongConnections = new Label();
			_labelLongConnections.Text = "Long Connections: 10";
			_labelLongConnections.TextColor = ColorStorage.CreateColor(75, 217, 97, 255);
			_labelLongConnections.Id = "_labelLongConnections";

			_panelConnectionIssues = new VerticalStackPanel();
			_panelConnectionIssues.Spacing = 8;
			_panelConnectionIssues.Id = "_panelConnectionIssues";
			_panelConnectionIssues.Widgets.Add(_labelRoomsCount);
			_panelConnectionIssues.Widgets.Add(_labelGridSize);
			_panelConnectionIssues.Widgets.Add(_labelConnectionsWithObstacles);
			_panelConnectionIssues.Widgets.Add(_labelNonStraightConnections);
			_panelConnectionIssues.Widgets.Add(_labelLongConnections);

			var panel1 = new Panel();
			StackPanel.SetProportionType(panel1, Myra.Graphics2D.UI.ProportionType.Fill);
			panel1.Widgets.Add(_panelMap);
			panel1.Widgets.Add(_panelConnectionIssues);

			var verticalStackPanel1 = new VerticalStackPanel();
			verticalStackPanel1.Spacing = 8;
			verticalStackPanel1.Widgets.Add(_mainMenu);
			verticalStackPanel1.Widgets.Add(horizontalStackPanel1);
			verticalStackPanel1.Widgets.Add(horizontalStackPanel2);
			verticalStackPanel1.Widgets.Add(panel1);

			
			Widgets.Add(verticalStackPanel1);
		}

		
		public MenuItem _menuItemFileOpen;
		public MenuItem _menuItemFileSave;
		public MenuItem _menuItemFileSaveAs;
		public MenuItem _menuItemImport;
		public MenuItem _menuHelpAbout;
		public HorizontalMenu _mainMenu;
		public Button _buttonStart;
		public SpinButton _spinButtonStep;
		public Button _buttonEnd;
		public ComboView _comboStraighten;
		public SpinButton _spinButtonStraightenSteps;
		public SpinButton _spinPushForceX;
		public SpinButton _spinPushForceY;
		public Button _buttonMeasure;
		public Button _buttonPush;
		public ScrollViewer _panelMap;
		public Label _labelRoomsCount;
		public Label _labelGridSize;
		public Label _labelConnectionsWithObstacles;
		public Label _labelNonStraightConnections;
		public Label _labelLongConnections;
		public VerticalStackPanel _panelConnectionIssues;
	}
}

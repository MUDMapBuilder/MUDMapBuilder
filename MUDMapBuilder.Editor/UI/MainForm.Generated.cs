/* Generated by MyraPad at 5/8/2024 11:25:54 PM */
using Myra;
using Myra.Graphics2D;
using Myra.Graphics2D.TextureAtlases;
using Myra.Graphics2D.UI;
using Myra.Graphics2D.Brushes;
using Myra.Graphics2D.UI.Properties;
using FontStashSharp.RichText;
using AssetManagementBase;

#if STRIDE
using Stride.Core.Mathematics;
#elif PLATFORM_AGNOSTIC
using System.Drawing;
using System.Numerics;
using Color = FontStashSharp.FSColor;
#else
// MonoGame/FNA
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
#endif

namespace MUDMapBuilder.Editor.UI
{
	partial class MainForm: Panel
	{
		private void BuildUI()
		{
			var label1 = new Label();
			label1.Text = "<<";

			_buttonStart = new Button();
			_buttonStart.Id = "_buttonStart";
			_buttonStart.Content = label1;

			_spinButtonStep = new SpinButton();
			_spinButtonStep.Integer = true;
			_spinButtonStep.Width = 50;
			_spinButtonStep.Id = "_spinButtonStep";

			var label2 = new Label();
			label2.Text = ">>";

			_buttonEnd = new Button();
			_buttonEnd.Id = "_buttonEnd";
			_buttonEnd.Content = label2;

			var horizontalStackPanel1 = new HorizontalStackPanel();
			horizontalStackPanel1.Spacing = 8;
			horizontalStackPanel1.Widgets.Add(_buttonStart);
			horizontalStackPanel1.Widgets.Add(_spinButtonStep);
			horizontalStackPanel1.Widgets.Add(_buttonEnd);

			var label3 = new Label();
			label3.Text = "<<";

			_buttonZeroCompact = new Button();
			_buttonZeroCompact.Id = "_buttonZeroCompact";
			_buttonZeroCompact.Content = label3;

			_spinButtonCompact = new SpinButton();
			_spinButtonCompact.Maximum = 1000;
			_spinButtonCompact.Minimum = 0;
			_spinButtonCompact.Integer = true;
			_spinButtonCompact.Width = 50;
			_spinButtonCompact.Id = "_spinButtonCompact";

			var label4 = new Label();
			label4.Text = ">>";

			_buttonMaximumCompact = new Button();
			_buttonMaximumCompact.Id = "_buttonMaximumCompact";
			_buttonMaximumCompact.Content = label4;

			var horizontalStackPanel2 = new HorizontalStackPanel();
			horizontalStackPanel2.Spacing = 8;
			horizontalStackPanel2.Widgets.Add(_buttonZeroCompact);
			horizontalStackPanel2.Widgets.Add(_spinButtonCompact);
			horizontalStackPanel2.Widgets.Add(_buttonMaximumCompact);

			_labelNonStraightConnections = new Label();
			_labelNonStraightConnections.Text = "Non-Straight Connections: 10";
			_labelNonStraightConnections.TextColor = ColorStorage.CreateColor(75, 217, 97, 255);
			_labelNonStraightConnections.Id = "_labelNonStraightConnections";

			_labelConnectionsWithObstacles = new Label();
			_labelConnectionsWithObstacles.Text = "Connections With Obstacles: 10";
			_labelConnectionsWithObstacles.TextColor = ColorStorage.CreateColor(75, 217, 97, 255);
			_labelConnectionsWithObstacles.Id = "_labelConnectionsWithObstacles";

			var label5 = new Label();
			label5.Text = "Force X:";
			label5.TextColor = ColorStorage.CreateColor(75, 217, 97, 255);

			_spinPushForceX = new SpinButton();
			_spinPushForceX.Maximum = 10;
			_spinPushForceX.Minimum = -10;
			_spinPushForceX.Integer = true;
			_spinPushForceX.Width = 59;
			_spinPushForceX.Id = "_spinPushForceX";

			var label6 = new Label();
			label6.Text = "Force Y:";
			label6.TextColor = ColorStorage.CreateColor(76, 217, 97, 255);

			_spinPushForceY = new SpinButton();
			_spinPushForceY.Maximum = 10;
			_spinPushForceY.Minimum = -10;
			_spinPushForceY.Integer = true;
			_spinPushForceY.Width = 59;
			_spinPushForceY.Id = "_spinPushForceY";

			var label7 = new Label();
			label7.Text = "Measure";

			_buttonMeasure = new Button();
			_buttonMeasure.Id = "_buttonMeasure";
			_buttonMeasure.Content = label7;

			var label8 = new Label();
			label8.Text = "Push";

			_buttonPush = new Button();
			_buttonPush.Id = "_buttonPush";
			_buttonPush.Content = label8;

			var horizontalStackPanel3 = new HorizontalStackPanel();
			horizontalStackPanel3.Spacing = 8;
			horizontalStackPanel3.Widgets.Add(label5);
			horizontalStackPanel3.Widgets.Add(_spinPushForceX);
			horizontalStackPanel3.Widgets.Add(label6);
			horizontalStackPanel3.Widgets.Add(_spinPushForceY);
			horizontalStackPanel3.Widgets.Add(_buttonMeasure);
			horizontalStackPanel3.Widgets.Add(_buttonPush);

			_panelMap = new ScrollViewer();
			_panelMap.Id = "_panelMap";
			StackPanel.SetProportionType(_panelMap, Myra.Graphics2D.UI.ProportionType.Fill);

			var verticalStackPanel1 = new VerticalStackPanel();
			verticalStackPanel1.Spacing = 8;
			verticalStackPanel1.Widgets.Add(horizontalStackPanel1);
			verticalStackPanel1.Widgets.Add(horizontalStackPanel2);
			verticalStackPanel1.Widgets.Add(_labelNonStraightConnections);
			verticalStackPanel1.Widgets.Add(_labelConnectionsWithObstacles);
			verticalStackPanel1.Widgets.Add(horizontalStackPanel3);
			verticalStackPanel1.Widgets.Add(_panelMap);

			
			Widgets.Add(verticalStackPanel1);
		}

		
		public Button _buttonStart;
		public SpinButton _spinButtonStep;
		public Button _buttonEnd;
		public Button _buttonZeroCompact;
		public SpinButton _spinButtonCompact;
		public Button _buttonMaximumCompact;
		public Label _labelNonStraightConnections;
		public Label _labelConnectionsWithObstacles;
		public SpinButton _spinPushForceX;
		public SpinButton _spinPushForceY;
		public Button _buttonMeasure;
		public Button _buttonPush;
		public ScrollViewer _panelMap;
	}
}
